version: '3.4'

services:
  webapi:
    container_name: "webapi"
    image: ${DOCKER_REGISTRY-}webapi
    ports:
      - 5000:80
      - 5001:443
    build:
      context: .
      dockerfile: src/Presentation/WebApi/Dockerfile
    environment:
      - "UseInMemoryDatabase=false"
      - "ConnectionStrings__DefaultConnection=Server=webapi-db;database=CleanArchitectureDb;User Id=sa;Password=Password_123;"
      - "DataProtectionKeysConfig__Enabled=true"
      - "DataProtectionKeysConfig__RedisServer=webapi-redis,6380"
      - "OpenTelemetryConfig__Enabled=true"
      - "OpenTelemetryConfig__OtlpReceiverUri=http://webapi-jaeger:4317"
      - "Serilog__WriteTo__1__Args__serverUrl=http://host.docker.internal:5342"
      - "Serilog__WriteTo__2__Args__connectionString=Server=webapi-db;database=CleanArchitectureDb;User Id=sa;Password=Password_123;"
      - "Serilog__WriteTo__3__Args__serverUrl=http://webapi-loki:3100"
    depends_on:
      - webapi-db
      - webapi-redis
      - webapi-seq
      - webapi-jaeger
      - webapi-loki
    networks:
      - clean-architecture-network

  webapi-db:
    image: mcr.microsoft.com/mssql/server:latest
    container_name: webapi-database
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Password_123
    ports:
      - "1434:1433"
    volumes: 
          - sqlsystem:/var/opt/mssql/
          - sqldata:/var/opt/sqlserver/data
          - sqllog:/var/opt/sqlserver/log
          - sqlbackup:/var/opt/sqlserver/backup
    networks:
      - clean-architecture-network

  webapi-redis:
    container_name: webapi-redis-server
    image: redis:latest
    hostname: webapi-redis-host
    ports:
      - 6380:6379
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data
    networks:
      - clean-architecture-network

  webapi-redis-commander:
    container_name: webapi-redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:host.docker.internal:6380
      - HTTP_USER=root
      - HTTP_PASSWORD=qwerty
    ports:
      - 8090:8081
    depends_on:
      - webapi-redis
    networks:
      - clean-architecture-network

  webapi-jaeger:
    container_name: webapi-jaeger
    image: jaegertracing/opentelemetry-all-in-one
    restart: unless-stopped
    ports:
      - 13133:13133 #health-check
      - 16686:16686 #ui
      - 4317:55680  #ingest / otmp receiver
    networks:
      - clean-architecture-network

  webapi-seq:
    container_name: "webapi-seq"  
    image: datalust/seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5343:80"
      - "5342:5341"
    volumes:
      - seq-data:/data
    networks:
      - clean-architecture-network

  webapi-loki:
    container_name: "webapi-loki"
    image: grafana/loki:master
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - clean-architecture-network

  webapi-grafana:
    container_name: "webapi-grafana"  
    image: grafana/grafana:master
    ports:
      - "3000:3000"
    networks:
      - clean-architecture-network
    environment:
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    depends_on:
      - webapi-loki

volumes:
  redis-data:
  sqlsystem:
  sqldata:
  sqllog:
  sqlbackup:
  seq-data:

networks:
  clean-architecture-network: {}